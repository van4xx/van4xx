<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin:auto;background:#0a0f18;display:block;z-index:1;position:relative" width="1084" height="322" preserveAspectRatio="xMidYMid" viewBox="0 0 1084 322">
<style type="text/css">
  @keyframes pulse {
    0% { opacity: 0.4; }
    50% { opacity: 1; }
    100% { opacity: 0.4; }
  }
  @keyframes flow {
    0% { stroke-dashoffset: 1000; }
    100% { stroke-dashoffset: 0; }
  }
  @keyframes glow {
    0% { filter: drop-shadow(0 0 2px #4f8fea); }
    50% { filter: drop-shadow(0 0 8px #4f8fea); }
    100% { filter: drop-shadow(0 0 2px #4f8fea); }
  }
  .tech-text {
    font-family: 'Monaco', monospace;
    font-weight: bold;
    fill: #4f8fea;
    font-size: 16px;
  }
  .flow-line {
    stroke: #4f8fea;
    stroke-width: 2;
    stroke-dasharray: 10, 5;
    animation: flow 30s linear infinite;
  }
  .node {
    fill: #0a0f18;
    stroke: #4f8fea;
    stroke-width: 2;
    animation: pulse 3s infinite;
  }
  .glow {
    animation: glow 2s infinite;
  }
</style>

<defs>
  <linearGradient id="tech-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
    <stop offset="0%" style="stop-color:#0a0f18;stop-opacity:1"/>
    <stop offset="50%" style="stop-color:#1a2535;stop-opacity:1"/>
    <stop offset="100%" style="stop-color:#0a0f18;stop-opacity:1"/>
  </linearGradient>
  <filter id="glow-filter">
    <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
    <feMerge>
      <feMergeNode in="coloredBlur"/>
      <feMergeNode in="SourceGraphic"/>
    </feMerge>
  </filter>
</defs>

<rect width="100%" height="100%" fill="url(#tech-gradient)"/>

<!-- Central Hub -->
<circle class="node glow" cx="542" cy="161" r="50"/>
<text class="tech-text glow" x="510" y="165">DEVELOPER</text>

<!-- Frontend Node -->
<circle class="node" cx="342" cy="81" r="40"/>
<text class="tech-text" x="310" y="85">FRONTEND</text>

<!-- Backend Node -->
<circle class="node" cx="742" cy="81" r="40"/>
<text class="tech-text" x="715" y="85">BACKEND</text>

<!-- Database Node -->
<circle class="node" cx="342" cy="241" r="40"/>
<text class="tech-text" x="310" y="245">DATABASE</text>

<!-- Cloud Node -->
<circle class="node" cx="742" cy="241" r="40"/>
<text class="tech-text" x="722" y="245">CLOUD</text>

<!-- Connection Lines -->
<path class="flow-line" d="M 542 111 L 542 161" filter="url(#glow-filter)"/>
<path class="flow-line" d="M 542 161 L 542 211" filter="url(#glow-filter)"/>
<path class="flow-line" d="M 492 161 L 382 161" filter="url(#glow-filter)"/>
<path class="flow-line" d="M 592 161 L 702 161" filter="url(#glow-filter)"/>

<!-- Tech Stack Labels -->
<g class="glow">
  <text class="tech-text" x="300" y="40">React • Next.js</text>
  <text class="tech-text" x="680" y="40">Node.js • Nest.js</text>
  <text class="tech-text" x="290" y="280">PostgreSQL • Redis</text>
  <text class="tech-text" x="700" y="280">AWS • Docker</text>
</g>

<!-- Code Snippets -->
<g class="glow">
  <text class="tech-text" x="50" y="120">const App = () => {</text>
  <text class="tech-text" x="70" y="140">  return <Component /></text>
  <text class="tech-text" x="50" y="160">}</text>

  <text class="tech-text" x="850" y="120">async function main() {</text>
  <text class="tech-text" x="870" y="140">  await server.start()</text>
  <text class="tech-text" x="850" y="160">}</text>
</g>

<!-- Connecting Dots -->
<g class="glow">
  <circle class="node" cx="442" cy="121" r="3"/>
  <circle class="node" cx="442" cy="161" r="3"/>
  <circle class="node" cx="442" cy="201" r="3"/>
  <circle class="node" cx="642" cy="121" r="3"/>
  <circle class="node" cx="642" cy="161" r="3"/>
  <circle class="node" cx="642" cy="201" r="3"/>
</g>
</svg> 